- if comments.present?
  .row
    .large-12.columns
      .large-6.columns
        %h4.subheader
          %i.fa.fa-comments-o
          = Event.human_attribute_name("comments")
          - if comments.count.nonzero?
            %sup.label.secondary
              = comments.count

      %hr{style: "border-style: dashed"}
      - if comments.present?
        - comments.map do |comment|
          .row{id: "comment-#{comment.id}"}
            .large-10.columns
              .small-2.columns
                - icon = @avatar.create_base64(comment.name, grid_size: 9, square_size: 128)
                = image_tag "data:image/png;base64,#{icon}"
                %strong.right
                  = link_to "#" + comment.id.to_s, "#comment-#{comment.id}"
              .small-10.columns
                %h5
                  = comment.name
                  - if comment.ancestry?
                    %small.subheader
                      %i.fa.fa-reply.fa-fw.fa-flip-horizontal
                      = link_to "#" + comment.ancestry.last.to_s, "#comment-#{comment.ancestry.last}"
                  %small.subheader
                    %strong &nbsp; Â· &nbsp;
                    = time_ago_in_words(comment.created_at.to_time, include_seconds: true)
                %p.text-justify
                  = simple_format(h(comment.content))
                .actions
                  = link_to new_comment_path(conference, event, parent_id: comment) do
                    %i.fa.fa-reply.fa-fw
                    = t("views.event.comment.reply")
          %br

      - elsif conference.active?
        .row
          .large-6.large-centered.columns
            .panel.callout.radius
              %h2
                = t("views.event.comment.no_comments")
              %p
                = t("views.event.comment.first_to_comment")

      - else
        .row
          .large-6.large-centered.columns
            .panel.callout.radius
              %h5
                %sub.fa.fa-frown-o.fa-2x.fa-fw
                = t("views.event.comment.no_comments")

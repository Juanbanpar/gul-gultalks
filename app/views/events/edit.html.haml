- page_title t("views.event.edit_event")

= event_breadcrumbs(@conference, nil, "edit")

.row
  .visible-for-medium-down
    .large-3.columns
      = link_to conference_path(@conference), { class: "button tiny radius expand" } do
        %span.fa.fa-chevron-left.fa-fw.fa-lg
        = t("back")

= render partial: "partials/view_header", locals: { header: "event.detailed_info", subheader: "event.complete_detailed_form" }

= form_for @form, url: {controller: "events", action: "save_edit"}, method: :patch do |f|

  - @form.errors.full_messages.each do |msg|
    .row
      .large-12.columns
        .alert-box.alert.radius
          = msg

  .row
    .large-12.columns
      %label{for: "subclass"}
        %i.fa.fa-thumb-tack.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("subclass")
        %small
          = t("event.required")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("views.event.subclass_requirements"), class: "radius"}
      .row
        .large-3.columns
          = f.select(:subclass, Event.subclasses.keys.map {|s| [t("views.event.subclasses.#{s}.default").humanize, s]}, class: "radius", required: true, label: false)

  .row
    .large-12.columns
      %label{for: "title"}
        %i.fa.fa-bookmark.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("title")
        %small
          = t("views.event.required")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("views.event.title_requirements"), class: "radius"}
        .right
          %sub 128
      = f.text_field :title, label: false, maxlength: 128, required: true, class: "radius"

  .row
    .large-12.columns
      %label{for: "summary"}
        %i.fa.fa-paperclip.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("summary")
        %small
          = t("views.event.required")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("views.event.summary_requirements"), class: "radius"}
        .right
          %sub 128
      = f.text_field :summary, label: false, maxlength: 128, required: true, class: "radius"

  .row
    .large-12.columns
      %label{for: "description"}
        %i.fa.fa-bars.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("description")
        %small
          = t("views.event.required")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("views.event.description_requirements"), class: "radius"}
        .right
          %sub.subheader
            %strong
              [
              = t("views.event.markdown_enabled")
              ]
          %sub 1400
      = f.text_area :description, label: false, maxlength: 1400, required: true, class: "radius md-textarea", size: "10x8"

  .row
    .large-12.columns
      .alert-box.radius{data: {alert: ""}}
        %i.fa.fa-hand-o-right.fa-lg.fa-fw
        = t("views.speaker.warning_up_to_five")
        %a.close{href:""} Ã—

  -# Accordion for small screens
  .show-for-small-up
    .row
      .large-12.columns
        %dl.accordion{"data-accordion" => ""}
          = f.fields_for :speakers do |speaker|
            - sp_index = speaker.index + 1
            %dd.accordion-navigation
              %a.text-center{href: "#speaker_#{sp_index}"}
                = t("views.speaker.caption", index: sp_index)
              .content{id: "speaker_#{sp_index}"}
                = render "partials/speaker_fields", f: speaker, index: sp_index

  .row
    .large-12.columns
      %label{for: "content_url"}
        %i.fa.fa-link.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("content_url")
        .right
          %sub 128
      = f.url_field :content_url, label: false, maxlength: 128, type: "url", placeholder: "http://", class: "radius"

  .row
    .large-12.columns
      %label{for: "code"}
        %i.fa.fa-code.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("code")
        .right
          %sub 128
      = f.url_field :code, label: false, maxlength: 128, type: "url", placeholder: "http://", class: "radius"

  .row
    .large-12.columns
      %label{for: "tag_list"}
        %i.fa.fa-tags.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("tag_list")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("views.event.tag_format")}
        .right
          %sub 128
      = f.text_field :tag_list, label: false, maxlength: 128, class: "radius", placeholder: t("event.tag_format"), value: @form.tag_list

  .row
    .large-4.columns
      %label{for: "language"}
        %i.fa.fa-globe.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("language")
        %small
          = t("views.event.required")
      = f.select(:language, t("views.event.languages").keys.map {|l| [t("views.event.languages.#{l}").humanize, l]}, class: "radius", required: true, label: false)

    .large-4.columns
      %label{for: "duration"}
        %i.fa.fa-clock-o.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("duration")
        %small
          = t("views.event.required")
      = f.select(:duration, Event.durations.keys.map {|d| [t("views.event.durations.#{d}").humanize, d]}, class: "radius", required: true, label: false)

    .large-4.columns
      %label{for: "level"}
        %i.fa.fa-lightbulb-o.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("level")
        %small
          = t("views.event.required")
      = f.select(:level, Event.levels.keys.map {|l| [t("views.event.levels.#{l}").humanize, l]}, class: "radius", required: true, label: false)

  .row
    .large-12.columns
      %label{for: "comments"}
        %i.fa.fa-comments.fa-fw.fa-lg.subheader
        = Event.human_attribute_name("notes")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("views.event.notes_requirements")}
        .right
          %sub 300
      = f.text_area :notes, label: false, maxlength: 300, pattern: "extended_alphanumeric", class: "radius", size: "10x6"

  .row
    .medium-4.columns
      = render partial: 'partials/recaptcha'
    .medium-4.columns
      = f.submit(t("views.event.send_event"), class: "button success expand")

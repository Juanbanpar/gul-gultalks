.row
  .medium-12.columns
    %ul.breadcrumbs
      %li
        = link_to t("home"), root_path
      %li
        = link_to Conference.friendly.find(params[:conference_id]).title, :controller => 'conferences', :action => 'show', :id => params[:conference_id]
      %li.current
        = t("event.new_event")
.row
  .medium-7.columns
    %h5.subheader
      = t("event.complete_form")

= form_for(@event, url: {controller: "events", action: "create"}, data: {abide: ""}) do |f|
  .row
    .large-12.columns
      %label{:for => "title"}
        %i.fa.fa-bookmark.fa-fw.fa-lg
        = t("event.form_title")
        %small
          = t("event.form_required")
      = f.text_field :title, :label => false, :pattern => "extended_alphanumeric", :required => true, class: "radius", :autofocus => true
      %small.error
        = t("event.title_requirements")

  .row
    .large-12.columns
      %label{:for => "brief_description"}
        %i.fa.fa-paperclip.fa-fw.fa-lg
        = t("event.form_brief_description")
        %small
          = t("event.form_required")
        %span#char-counter
      = f.text_field :brief_description, :label => false, :pattern => "extended_alphanumeric", :required => true, class: "radius lettrify"
      %small.error
        = t("event.brief_description_requirements")

  .row
    .large-12.columns
      %label{:for => "description"}
        %i.fa.fa-bars.fa-fw.fa-lg
        = t("event.form_description")
        %small
          = t("event.form_required")
      = f.text_area :description, :label => false, :pattern => "extended_alphanumeric", :required => true, class: "radius", size: "10x8"
      %small.error
        = t("event.description_requirements")

  .row
    .large-6.columns
      %label{:for => "speaker"}
        %i.fa.fa-users.fa-fw.fa-lg
        = t("event.form_speakers")
      = f.text_field :speaker, :label => false, :pattern => "extended_alpha", class: "radius"
      %small.error
        = t("event.speaker_requirements")

    .large-6.columns
      %label{:for => "speaker_contact_info"}
        %i.fa.fa-envelope.fa-fw.fa-lg
        = t("event.form_contact")
      = f.text_field :speaker_contact_info, :label => false, :pattern => "extended_email", class: "radius"
      %small.error
        = t("event.email_requirements")

    /    .large-2.columns
    /      .button.large.radius.expand
    /        %i.fa.fa-plus.fa-lg
    /  .row
    /    .large-12.columns
    /      .panel.radius
    /        %ul
    /          %li
    /            %span #1. Ponente
    /            %a.fa.fa-pencil
    /            %a.fa.fa-times

  .row
    .large-12.columns
      %label
        %i.fa.fa-link.fa-fw.fa-lg
        = t("event.form_url")
      = f.url_field :content_url, :label => false, :pattern => "url", class: "radius"
      %small.error
        = t("event.url_requirements")
  .row
    .large-12.columns
      %label{:for => "tags"}
        %i.fa.fa-tags.fa-fw.fa-lg
        = t("event.form_tags")
      = f.text_field :tags, label: false, class: "radius", placeholder: t("event.form_tag_format")
      %small.error
        = t("error")

  .row
    .large-3.columns
      %label
        %i.fa.fa-language.fa-fw.fa-lg
        = t("event.form_language")
      /= select("language", "language_id", t("event.language_id").each_pair {|k,v| [ k, k ] }, { include_blank: true })
      %select 
        - t("event.languages").each_pair do |k, v|
          %option{value: k}
            = v.humanize
      /     %span
      /       = "#{k} -- #{v}"
      /       /= options_for_select([[t('event.language')[k], k], ['English',2]])
      /       / = select("language", options_for_select([['Spanish',1], ['English',2]]))
      /       / = f.select_tag(:language, options_for_select(languages))


    .large-3.columns
      %label
        %i.fa.fa-clock-o.fa-fw.fa-lg
        = t("event.form_duration").humanize
      %select
        = options_for_select([['30 min',1], ['1 hora',2]])

    .large-6.columns
      %label
        %i.fa.fa-lightbulb-o.fa-lg
        = t("event.form_level")

      .row.show-for-touch
        .large-12.columns
          = select("event", "level", Event.levels.keys.collect {|l| [t("event.levels.#{l}").humanize, l]})
          /= f.range_field :level, :step => "1", :min => "0", :max => Event.levels.count
          /= f.select :level, Eve
          /%span.level-name
            

      .row.hide-for-touch
        .large-12.columns
          - Event.levels.keys.each do |l|
            = radio_button("event", "level", "#{l}")
            %label
              = t("event.levels.#{l}").humanize

  .row
    .large-12.columns
      %label{:for => "comments"}
        %i.fa.fa-comments.fa-fw.fa-lg
        = t("event.form_comments")
      = f.text_area :comments, label: false, :pattern => "extended_alphanumeric", class: "radius", size: "10x6"
      %small.error
        = t("event.comments_requirements")
  .row
    .large-12.columns
      = check_box("cert", "accepted", { class: 'eula_check' }, "yes", "no")
      %span Quiero solicitar un certificado como ponente
  .row
    .large-12.columns
      = check_box("eula", "accepted", { class: 'eula_check' }, "yes", "no")
      %span Acepto las condiciones de privacidad
      
  .row
    .large-6.columns.large-centered
      = f.submit t("event.send_event"), class: "button radius expand success"

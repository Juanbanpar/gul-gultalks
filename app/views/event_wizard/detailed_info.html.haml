- page_title t("event.new_event")
= render partial: "breadcrumbs"

.row
  .large-12.columns
    %h2.subheader 
      = t("event.detailed_info").humanize
    %hr
.row
  .large-12.columns
    %h5.subheader
      = t("event.complete_detailed_form")

= form_for(@event, url: wizard_path, method: :put) do |f|

  .row
    .large-12.columns
      %span 
        Sólo se pueden añadir hasta un máximo de 5 integrantes por actividad. 
      #speakers
        = f.fields_for :speakers do |speaker|
          = render "speaker_fields", f: speaker
        .links.right
          = link_to_add_association t("speaker.add"), f, :speakers, class: "button tiny radius"

  .row
    .large-12.columns
      %label{for: "content_url"}
        %i.fa.fa-link.fa-fw.fa-lg.subheader
        = t("event.url")
      = f.url_field :content_url, label: false, maxlength: 128, type: "url", class: "radius"
  .row
    .large-12.columns
      %label{for: "code"}
        %i.fa.fa-code.fa-fw.fa-lg.subheader
        = t("event.code")
      = f.url_field :code, label: false, maxlength: 128, type: "url", class: "radius"


  .row
    .large-12.columns
      %label{for: "tags"}
        %i.fa.fa-tags.fa-fw.fa-lg.subheader
        = t("event.tags")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("event.tag_format")}
      = f.text_field :tags, label: false, maxlength: 128, class: "radius", placeholder: t("event.tag_format")

  .row
    .large-4.columns
      %label{for: "language"}
        %i.fa.fa-globe.fa-fw.fa-lg.subheader
        = t("event.language")
        %small
          = t("event.required")
      = select("event", "language", t("event.languages").keys.collect {|l| [t("event.languages.#{l}").humanize, l]},{include_blank: true, selected: "selected"}, required: true, class: "radius")

    .large-4.columns
      %label{for: "duration"}
        %i.fa.fa-clock-o.fa-fw.fa-lg.subheader
        = t("event.duration")
        %small
          = t("event.required")
      = select("event", "duration", Event.durations.keys.collect {|d| [t("event.durations.#{d}").humanize, d]}, { include_blank: true, selected: "selected"}, class: "radius", required: true, label: false)

    .large-4.columns
      %label{for: "level"}
        %i.fa.fa-lightbulb-o.fa-lg.subheader
        = t("event.level")
        %small
          = t("event.required")
      = select("event", "level", Event.levels.keys.collect {|l| [t("event.levels.#{l}").humanize, l]}, { include_blank: true, selected: "selected"}, class: "radius", required: true, label: false)
      /%span.level-name

      -# .row.hide-for-touch
      -#   .large-12.columns
      -#     - Event.levels.keys.each do |l|
      -#       = radio_button("event", "level", "#{l}")
      -#       %label
      -#         = t("event.levels.#{l}").humanize

  .row
    .large-12.columns
      %label{for: "comments"}
        %i.fa.fa-comments.fa-fw.fa-lg.subheader
        = t("event.comments")
        %i.fa.fa-question-circle.fa-fw{"aria-haspopup" => "true", "data-tooltip" => "", title: t("event.notes_requirements")}
      = f.text_area :notes, label: false, maxlength: 300, pattern: "extended_alphanumeric", class: "radius", size: "10x6"

  .row
    .large-12.columns
      .show-for-touch.hide-for-medium-up
        .switch.radius.small
          // FIXME: !?!?! 
          %label#cert_accepted Quiero solicitar un certificado como ponente
          = check_box("cert", "accepted", { class: '' }, "no", "yes")
        %small Quiero solicitar un certificado como ponente
      .show-for-medium-up
        = check_box("cert", "accepted", { class: '' }, "no", "yes")
        %label Quiero solicitar un certificado como ponente
  -# .row
  -#   .large-12.columns
  -#     = check_box("eula", "accepted", { class: 'eula_check' }, "yes", "no")
  -#     %span Acepto las condiciones de privacidad
      
  .row
    .large-3.columns.right
      = f.button type: "submit",  class: "button radius expand success" do
        = content_tag(:span, t("event.next_step"))
        %span.fa.fa-chevron-right.fa-fw.fa-lg

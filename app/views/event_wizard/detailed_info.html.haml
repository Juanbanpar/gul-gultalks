.row
  .medium-12.columns
    %ul.breadcrumbs
      %li
        = link_to t("home"), root_path
      %li
        = link_to Conference.friendly.find(params[:conference_id]).title, conference_path(params[:conference_id])
      %li.current
        = t("event.new_event")

.row
  .large-12.columns
    %h2.subheader Placeholder
    %hr
.row
  .large-12.columns
    %h5.subheader
      = t("event.complete_detailed_form")

= form_for(@event, url: wizard_path, method: :put, data: {abide: ""}) do |f|

  .row
    .large-12.columns
      %label
        %i.fa.fa-thumb-tack.fa-lg
        = t("event.subclass")

      .row.show-for-touch
        .large-12.columns
          = select("event", "subclass", Event.subclasses.keys.collect {|s| [t("event.subclasses.#{s}").humanize, s]})

      .row.hide-for-touch
        .large-12.columns
          - Event.subclasses.keys.each do |s|
            = radio_button("event", "subclass", "#{s}")
            %label
              = t("event.subclasses.#{s}").humanize

  .row
    .large-6.columns
      %label{for: "speaker"}
        %i.fa.fa-users.fa-fw.fa-lg
        = t("event.speakers")
        %small
          = t("event.required")
      = f.text_field :speaker, label: false, maxlength: 64, pattern: "extended_alpha", required: true, class: "radius"
      %small.error
        = t("event.speaker_requirements")

    .large-6.columns
      %label{for: "email"}
        %i.fa.fa-envelope.fa-fw.fa-lg
        = t("event.contact")
        %small
          = t("event.required")
      = f.text_field :email, label: false, maxlength: 64, pattern: "extended_email", required: true, class: "radius"
      %small.error
        = t("event.email_requirements")

  .row
    .large-12.columns
      %label
        %i.fa.fa-link.fa-fw.fa-lg
        = t("event.url")
      = f.url_field :content_url, label: false, maxlength: 128, pattern: "url", class: "radius"
      %small.error
        = t("event.url_requirements")
  .row
    .large-12.columns
      %label{for: "tags"}
        %i.fa.fa-tags.fa-fw.fa-lg
        = t("event.tags")
      = f.text_field :tags, label: false, maxlength: 128, class: "radius", placeholder: t("event.tag_format")
      %small.error
        = t("error")

  .row
    .large-3.columns
      %label
        %i.fa.fa-globe.fa-fw.fa-lg
        = t("event.language")
      = select("event", "language", t("event.languages").keys.collect {|l| [t("event.languages.#{l}").humanize, l]})

    .large-3.columns
      %label
        %i.fa.fa-clock-o.fa-fw.fa-lg
        = t("event.duration").humanize
      %select
        = options_for_select([['30 min',1], ['1 hora',2]])

    .large-6.columns
      %label
        %i.fa.fa-lightbulb-o.fa-lg
        = t("event.level")

      .row.show-for-touch
        .large-12.columns
          = select("event", "level", Event.levels.keys.collect {|l| [t("event.levels.#{l}").humanize, l]})
          /%span.level-name

      .row.hide-for-touch
        .large-12.columns
          - Event.levels.keys.each do |l|
            = radio_button("event", "level", "#{l}")
            %label
              = t("event.levels.#{l}").humanize

  .row
    .large-12.columns
      %label{for: "comments"}
        %i.fa.fa-comments.fa-fw.fa-lg
        = t("event.comments")
      = f.text_area :notes, label: false, maxlength: 300, pattern: "extended_alphanumeric", class: "radius", size: "10x6"
      %small.error
        = t("event.comments_requirements")
  .row
    .large-12.columns
      = check_box("cert", "accepted", { class: 'eula_check' }, "yes", "no")
      %span Quiero solicitar un certificado como ponente
  .row
    .large-12.columns
      = check_box("eula", "accepted", { class: 'eula_check' }, "yes", "no")
      %span Acepto las condiciones de privacidad
      
  .row
    .large-6.columns.large-centered
      = f.submit t("event.next_step"), class: "button radius expand success"
